services:
  # PHP app container
  app:
    container_name: ${APP_CONTAINER_NAME}  # Nome do container com variável
    build:
      context: ./config/php
      dockerfile: Dockerfile
    volumes:
      - ./:/var/www
      - ./config/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - app_network


  # NGINX
  nginx:
    container_name: ${NGINX_CONTAINER_NAME}
    build:
      context: ./config/nginx
      dockerfile: Dockerfile
    ports:
      - "${NGINX_PORT_80}:80"
      - "${NGINX_PORT_443}:443"
    volumes:
      - ./:/var/www
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      - NGINX_HOST=${NGINX_HOST}
    networks:
      - app_network

  # MySQL
  mysql:
    container_name: ${MYSQL_CONTAINER_NAME}  # Nome do container com variável
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./mysql:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - app_network

  # Node.js
  node:
    container_name: ${NODE_CONTAINER_NAME}  # Nome do container com variável
    image: node:23
    working_dir: /var/www
    volumes:
      - ./:/var/www
    command: [ "sh", "-c", "while :; do sleep 1; done" ]
    networks:
      - app_network

networks:
  app_network:
    driver: bridge